# TODO:
# 4. Encrypt network.env
# 5. Fix Monica photos
#
volumes:
  mariadb_data:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.47.2,nolock,hard,rw,noatime,nfsvers=3"
      device: ":/mnt/tank/network/mariadb"
  monica_data:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.47.2,nolock,hard,rw,noatime,nfsvers=3"
      device: ":/mnt/tank/network/monica"

services:
  traefik:
    image: "traefik:v2.10"
    command:
      - "--ping=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=arg.network"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.arg.network"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.email=arg@arg.zone"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--serverstransport.insecureskipverify=true"
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - "network.env"
    volumes:
      - "/home/arg/network/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
    healthcheck:
      test: "traefik healthcheck --ping"

  portainer:
    image: "portainer/portainer-ce:2.19.3-alpine"
    restart: "no"
    security_opt:
      - "no-new-privileges:true"
    volumes:
      - "/home/arg/network/portainer:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
    labels:
      traefik.enable: true
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.http.routers.portainer.rule: "Host(`portainer.arg.network`)"
      traefik.http.routers.portainer.entrypoints: "websecure"
      traefik.http.routers.portainer.tls.certresolver: "letsencrypt"
    healthcheck:
      test: "wget -q --spider 'http://localhost:9000'"

  mariadb:
    image: "mariadb:11.2-jammy"
    restart: "no"
    env_file:
      - "network.env"
    volumes:
      - "mariadb_data:/var/lib/mysql"
      - "${PWD}/init.sql:/docker-entrypoint-initdb.d/init.sql:ro"
    command: "--transaction-isolation=READ-COMMITTED --log-bin=mysqld-bin --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed"
    healthcheck:
      test: "healthcheck.sh --su-mysql --connect --innodb_initialized"

  adminer:
    image: "adminer:4-standalone"
    depends_on:
      mariadb:
        condition: service_healthy
    restart: "no"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.http.routers.adminer.rule=Host(`adminer.arg.network`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=letsencrypt"
    # disabled as there is nether curl nor wget installed
    # healthcheck:
    #   test: "curl --output /dev/null --silent --head --fail 'http://localhost:8080' || exit 1"

  monica:
    image: "monica:latest"
    restart: "no"
    depends_on:
      mariadb:
        condition: service_healthy
    env_file:
      - "network.env"
    environment:
      DB_HOST: "mariadb"
      DB_USERNAME: "monica"
      DB_PASSWORD: "monica"
      APP_ENV: "production"
      APP_DISABLE_SIGNUP: true
      APP_TRUSTED_PROXIES: "*"
      APP_URL: "https://monica.arg.network"
    volumes:
      - "monica_data:/var/www/html/storage"
    labels:
      traefik.enable: true
      traefik.http.services.monica.loadbalancer.server.port: 80
      traefik.http.routers.monica.rule: "Host(`monica.arg.network`)"
      traefik.http.routers.monica.entrypoints: "websecure"
      traefik.http.routers.monica.tls.certresolver: "letsencrypt"
    healthcheck:
      test: "curl --output /dev/null --silent --head --fail 'http://localhost:80' || exit 1"

  freshrss:
    image: "linuxserver/freshrss:latest"
    restart: "no"
    depends_on:
      mariadb:
        condition: service_healthy
    env_file:
      - "network.env"
    volumes:
      - "/home/arg/network/freshrss:/config"
    labels:
      traefik.enable: true
      traefik.http.services.freshrss.loadbalancer.server.port: 80
      traefik.http.routers.freshrss.rule: "Host(`freshrss.arg.network`)"
      traefik.http.routers.freshrss.entrypoints: "websecure"
      traefik.http.routers.freshrss.tls.certresolver: "letsencrypt"
    healthcheck:
      test: "curl --output /dev/null --silent --head --fail 'http://localhost:80' || exit 1"

  it_tools:
    image: "corentinth/it-tools:latest"
    restart: "no"
    labels:
      traefik.enable: true
      traefik.http.services.it_tools.loadbalancer.server.port: 80
      traefik.http.routers.it_tools.rule: "Host(`tools.arg.network`)"
      traefik.http.routers.it_tools.entrypoints: "websecure"
      traefik.http.routers.it_tools.tls.certresolver: "letsencrypt"
    healthcheck:
      test: "curl --output /dev/null --silent --head --fail 'http://localhost:80' || exit 1"

  plex:
    image: "linuxserver/plex:latest"
    restart: "no"
    volumes:
      - "/home/arg/network/plex:/config"
      - "/home/arg/videos:/videos"
    devices:
      - "/dev/dri/card0:/dev/dri/card0"
      - "/dev/dri/renderD128:/dev/dri/renderD128"
    env_file:
      - "linuxserver.env"
      - "network.env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.rule=Host(`plex.arg.network`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=letsencrypt"
    healthcheck:
      test: "curl --output /dev/null --silent --head --fail 'http://localhost:32400/identity' || exit 1"

  qbittorrent:
    image: "linuxserver/qbittorrent:latest"
    restart: "no"
    volumes:
      - "/home/arg/network/qbittorrent:/config"
      - "/home/arg/downloads:/downloads"
    environment:
      WEBUI_PORT: 8080
    env_file:
      - "linuxserver.env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      - "traefik.http.routers.qbittorrent.rule=Host(`downloads.arg.network`)"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt"
    healthcheck:
      test: "curl --output /dev/null --silent --head --fail 'http://localhost:8080' || exit 1"

  radarr:
    image: "linuxserver/radarr:latest"
    restart: "no"
    depends_on:
      - prowlarr
      - qbittorrent
    volumes:
      - "/home/arg/network/radarr:/config"
      - "/home/arg/videos/movies:/movies"
      - "/home/arg/downloads:/downloads"
    env_file:
      - "linuxserver.env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.rule=Host(`radarr.arg.network`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
    # disabled due to API error after upgrading Radarr to v4
    # despite having https://github.com/Radarr/Radarr/issues/6785 
    # healthcheck:
      # test: "curl --output /dev/null --silent --head --fail 'http://localhost:7878/ping' || exit 1"

  sonarr:
    image: "linuxserver/sonarr:latest"
    restart: "no"
    depends_on:
      - prowlarr
      - qbittorrent
    volumes:
      - "/home/arg/network/sonarr:/config"
      - "/home/arg/videos/tv_shows:/tv"
      - "/home/arg/downloads:/downloads"
    env_file:
      - "linuxserver.env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.arg.network`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
    healthcheck:
      test: "curl --output /dev/null --silent --head --fail 'http://localhost:8989/ping' || exit 1"

  prowlarr:
    image: "linuxserver/prowlarr:latest"
    restart: "no"
    volumes:
      - "/home/arg/network/prowlarr:/config"
    env_file:
      - "linuxserver.env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.arg.network`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencrypt"
    # disabled as it returns 401
    # healthcheck:
    #   test: "curl --output /dev/null --silent --head --fail 'http://localhost:9696/ping' || exit 1"
