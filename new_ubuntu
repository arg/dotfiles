#!/bin/bash

set -eu

echo -e "\U0001f538 Setting up a new remote Ubuntu 20.04 workstation..."

echo -e "\U0001f538 Now let's answer few questions."
read -p "What SSH port you want to use? " -e ssh_port
read -p "What Mosh port you want to use? " -e mosh_port
read -p "What login your regular user should have? " -e user_login

echo -e "\U0001f538 Adding package repositories..."
add-apt-repository universe
curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
add-apt-repository "deb https://deb.nodesource.com/node_12.x focal main" -y
apt-get update

echo -e "\U0001f538 Upgrading system packages..."
apt-get upgrade -y

echo -e "\U0001f538 Installing new packages..."
apt-get install -q -y zsh neovim mc htop ripgrep wget curl git mosh tmux certbot cmake pkg-config \
  nodejs docker.io docker-compose unzip python3-pip python3-setuptools python3-venv python3-wheel \
  autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev \
  libffi-dev libgdbm-dev

echo -e "\U0001f538 Installing additional tools..."
curl -sLS -o 1password.zip "https://cache.agilebits.com/dist/1P/op/pkg/v0.10.0/op_linux_amd64_v0.10.0.zip"
unzip 1password.zip op -d /usr/local/bin
rm 1password.zip

echo -e "\U0001f538 Configuring SSH access..."
# commenting existing options
sed -i "s/^Port/#&/" /etc/ssh/sshd_config
sed -i "s/^PermitRootLogin/#&/" /etc/ssh/sshd_config
sed -i "s/^IgnoreUserKnownHosts/#&/" /etc/ssh/sshd_config
sed -i "s/^PasswordAuthentication/#&/" /etc/ssh/sshd_config
sed -i "s/^PermitTunnel/#&/" /etc/ssh/sshd_config
sed -i "s/^AllowAgentForwarding/#&/" /etc/ssh/sshd_config
sed -i "s/^AllowTcpForwarding/#&/" /etc/ssh/sshd_config
sed -i "s/^X11Forwarding/#&/" /etc/ssh/sshd_config
# adding new options
tee -a /etc/ssh/sshd_config << END
# added by arg
Port $ssh_port
PermitRootLogin no
IgnoreUserKnownHosts yes
PasswordAuthentication no
PermitTunnel no
AllowAgentForwarding no
AllowTcpForwarding no
X11Forwarding no
AllowGroups sshusers
END

echo -e "\U0001f538 Setting firewall rules..."
ufw allow $ssh_port/tcp
ufw allow $mosh_port/udp

echo -e "\U0001f538 Creating SSH group..."
addgroup sshusers

echo -e "\U0001f538 Creating user..."
adduser $user_login
usermod -a -G sudo,docker,sshusers -s /usr/bin/zsh $user_login
sudo -H -u $user_login sh -c 'mkdir $HOME/.ssh'
sudo -H -u $user_login sh -c 'chmod 0700 $HOME/.ssh'
echo -e "\U0001f538 Now paste your public SSH key end press <Return>"
read public_key
sudo -H -u $user_login sh -c 'touch $HOME/.ssh/authorized_keys'
echo $public_key > /home/$user_login/.ssh/authorized_keys
sudo -H -u $user_login sh -c 'chmod 0600 $HOME/.ssh/authorized_keys'

echo -e "\U0001f538 Installing additional tools for user..."
sudo -H -u $user_login sh -c 'pip3 install --user pynvim'
sudo -H -u $user_login sh -c 'git clone https://github.com/rbenv/rbenv.git ~/.rbenv'
sudo -H -u $user_login sh -c 'git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build'

echo ""
echo -e "\U0001f539 Everything done. Press <Return> to reboot the machine with new settings."
echo -e "\U0001f539 Then you will be able to login as $user_login to $ssh_port (SSH) or $mosh_port (Mosh) port."
read
ufw --force enable
reboot
