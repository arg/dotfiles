#!/usr/bin/env bash

set -eu

echo "************************************************"
echo "* Setting up a new FreeBSD 13.0 workstation... *"
echo "************************************************"

# echo "***********************************"
# echo "* Updating configuration files... *"
# echo "***********************************"

# mkdir -p /usr/local/etc/pkg/repos
# echo 'FreeBSD: { url: "pkg+http://pkg.FreeBSD.org/${ABI}/latest" }' > /usr/local/etc/pkg/repos/FreeBSD.conf

echo "********************************"
echo "* Upgrading system packages... *"
echo "********************************"

pkg update
pkg upgrade -y

echo "******************************"
echo "* Installing new packages... *"
echo "******************************"

pkg install -y 1password-client alacritty curl dbus devcpu-data dmenu doas feh firefox fish \
  fzf git gmake gnupg htop i3 i3lock jq keepassxc mc mosh neovim nerd-fonts nvidia-driver \
  nvidia-settings nvidia-xconfig p7zip paratype pcmanfm polybar remmina-lite ripgrep rsync scrot \
  spotify-tui spotifyd syncthing taskwarrior telegram-desktop thunderbird tmux vifm vlc wget \
  xdg-utils xdm xorg zathura zathura-pdf-mupdf

echo "**********************"
echo "* Setting up user... *"
echo "**********************"

pw usermod arg -G wheel,video -s /usr/local/bin/fish

echo "***********************************"
echo "* Updating configuration files... *"
echo "***********************************"

echo "PermitRootLogin no" >> /etc/ssh/sshd_config
echo "IgnoreUserKnownHosts yes" >> /etc/ssh/sshd_config
echo "PasswordAuthentication no" >> /etc/ssh/sshd_config
echo "PermitTunnel no" >> /etc/ssh/sshd_config
echo "AllowAgentForwarding no" >> /etc/ssh/sshd_config
echo "AllowTcpForwarding no" >> /etc/ssh/sshd_config
echo "X11Forwarding no" >> /etc/ssh/sshd_config
echo "AllowUsers arg" >> /etc/ssh/sshd_config

echo "permit nopass keepenv :wheel" >> /usr/local/etc/doas.conf

echo "kern.coredump=0" >> /etc/sysctl.conf
echo "kern.sched.preempt_thresh=224" >> /etc/sysctl.conf
echo "kern.vt.enable_bell=0" >> /etc/sysctl.conf
echo "hw.syscons.bell=0" >> /etc/sysctl.conf

echo "#!/bin/sh" > /usr/local/etc/X11/xdm/Xsetup_0

mkdir -p /etc/X11
curl -sLS -o /etc/X11/xorg.conf "https://raw.githubusercontent.com/arg/dotfiles/master/freebsd/etc/X11/xorg.conf"

sysrc kld_list+="nvidia-modeset"
sysrc clear_tmp_enable="YES"
sysrc syslogd_flags="-ss"
sysrc sendmail_enable="NONE"
sysrc dumpdev="NO"
sysrc keymap="us.kbd"
sysrc zfs_enable="YES"
sysrc powerd_enable="YES"
sysrc sshd_enable="YES"
sysrc xdm_enable="YES"
sysrc dbus_enable="YES"
sysrc syncthing_enable="YES"
sysrc syncthing_user="arg"
sysrc syncthing_group="arg"
sysrc spotifyd_enable="YES"
sysrc spotifyd_config="/usr/home/arg/.config/spotifyd/spotifyd.conf"
sysrc spotifyd_user="arg"
sysrc firewall_enable="YES"
sysrc firewall_type="workstation"
sysrc firewall_quiet="YES"
sysrc firewall_logdeny="NO"
sysrc firewall_myservices="22/tcp 22000/tcp 3000/tcp 1234/tcp"
sysrc firewall_allowservices="any"

sysrc -f /boot/loader.conf autoboot_delay="3"
sysrc -f /boot/loader.conf coretemp_load="YES"
sysrc -f /boot/loader.conf cpu_microcode_load="YES"
sysrc -f /boot/loader.conf cpu_microcode_name="/boot/firmware/intel-ucode.bin"

sysrc -f /etc/periodic.conf daily_clean_hoststat_enable="NO"
sysrc -f /etc/periodic.conf daily_status_mail_rejects_enable="NO"
sysrc -f /etc/periodic.conf daily_status_include_submit_mailq="NO"
sysrc -f /etc/periodic.conf daily_submit_queuerun="NO"

echo "SMARTHOST mail.arg.network" >> /etc/dma/dma.conf
echo "PORT 8025" >> /etc/dma/dma.conf
echo "MAILNAME `hostname`.arg.network" >> /etc/dma/dma.conf

echo "root: arg@arg.zone" >> /etc/mail/aliases

echo "alias root arg@arg.zone" >> /etc/mail.rc
echo "alias arg arg@arg.zone" >> /etc/mail.rc

cp /usr/share/examples/dma/mailer.conf /etc/mail/
echo "newaliases /usr/libexec/dma" >> /etc/mail/mailer.conf
echo "rmail /usr/libexec/dma" >> /etc/mail/mailer.conf

echo "@daily root freebsd-update cron" >> /etc/crontab

# The following commands are required for running bhyve
# pkg install -y bhyve-firmware vm-bhyve
# zfs create zroot/var/vm
# sysrc -f /boot/loader.conf vmm_load="YES"
# sysrc vm_enable="YES"
# sysrc vm_dir="zfs:zroot/var/vm"
# vm init
# vm switch create public
# vm switch add public em0

echo "****************************************************************************"
echo "* Everything done. Press <Return> to reboot the machine with new settings  *"
echo "* Now install dotfiles by 'arg' user (see Readme for the instruction).     *"
echo "****************************************************************************"
read
